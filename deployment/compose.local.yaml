services:
  nessie:
    image: ghcr.io/projectnessie/nessie:latest
    container_name: nessie
    ports:
      - 19120:19120
    depends_on:
      - mongo
    environment:
      - nessie.version.store.type=MONGODB
      - quarkus.mongodb.database=nessie
      - quarkus.mongodb.connection-string=mongodb://root:password@mongo:27017
    networks:
      iceberg:
  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo-data:/data/db
    networks:
      iceberg:
  minio:
    image: minio/minio:latest
    container_name: minio
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_DOMAIN: minio
      MINIO_REGION_NAME: us-east-1
      MINIO_REGION: us-east-1
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minio-data:/data
    networks:
      iceberg:
        aliases:
          - warehouse.minio
  dremio:
    image: dremio/dremio-oss:latest
    container_name: dremio
    ports:
      - 9047:9047 # Web UI (HTTP)
      - 31010:31010 # ODBC/JDBC clients
      - 32010:32010 # Apache Arrow Flight clients
    volumes:
      - dremio-data:/opt/dremio/data
    networks:
      iceberg:
  # mc:
  #   image: minio/mc
  #   container_name: mc
  #   environment:
  #     - AWS_ACCESS_KEY_ID=admin
  #     - AWS_SECRET_ACCESS_KEY=password
  #     - AWS_REGION=us-east-1
  #   entrypoint: >
  #     /bin/sh -c "
  #     until (/usr/bin/mc config host add minio http://minio:9000 minioadmin minioadmin) do echo '...waiting...' && sleep 1; done;
  #     /usr/bin/mc rm -r --force warehouse;
  #     /usr/bin/mc mb warehouse;
  #     /usr/bin/mc policy set public warehouse;
  #     tail -f /dev/null
  #     "
  #   depends_on:
  #     - minio
  #   networks:
  #     iceberg:
  # iceberg-rest:
  #   image: tabulario/iceberg-rest
  #   container_name: iceberg-rest
  #   ports:
  #     - 8181:8181
  #   environment:
  #     AWS_ACCESS_KEY_ID: minioadmin
  #     AWS_SECRET_ACCESS_KEY: minioadmin
  #     AWS_REGION: us-east-1
  #     CATALOG_WAREHOUSE: s3://warehouse
  #     CATALOG_IO__IMPL: org.apache.iceberg.aws.s3.S3FileIO
  #     CATALOG_S3_ENDPOINT: http://minio:9000
  #   networks:
  #     iceberg:
volumes:
  mongo-data:
  minio-data:
  dremio-data:

networks:
  iceberg:
